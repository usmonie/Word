package wtf.word.core.design.themes.colors

import androidx.compose.ui.graphics.Color
import wtf.word.core.design.themes.Colors

object EmeraldEleganceColors: Colors() {

    override val light_primary: Color = Color(0xFF80CBC4)
    override val light_onPrimary: Color = Color(0xFF003D33)
    override val light_primaryContainer: Color = Color(0xFF005B4F)
    override val light_onPrimaryContainer: Color = Color(0xFF80CBC4)
    override val light_secondary: Color = Color(0xFF81C784)
    override val light_onSecondary: Color = Color(0xFF003300)
    override val light_secondaryContainer: Color = Color(0xFFA5D6A7)
    override val light_onSecondaryContainer: Color = Color(0xFF1B5E20)
    override val light_tertiary: Color = Color(0xFF80CBC4)
    override val light_onTertiary: Color = Color(0xFF006064)
    override val light_tertiaryContainer: Color = Color(0xFFB2EBF2)
    override val light_onTertiaryContainer: Color = Color(0xFF00796B)
    override val light_error: Color = Color(0xFFCF6679)
    override val light_onError: Color = Color(0xFF000000)
    override val light_errorContainer: Color = Color(0xFF5D001E)
    override val light_onErrorContainer: Color = Color(0xFFCF6679)
    override val light_background: Color = Color(0xFF003D33)
    override val light_onBackground: Color = Color(0xFF80CBC4)
    override val light_surface: Color = Color(0xff044b3f)
    override val light_onSurface: Color = Color(0xFF80CBC4)
    override val light_surfaceVariant: Color = Color(0xFF005B4F)
    override val light_onSurfaceVariant: Color = Color(0xFF80CBC4)
    override val light_outline: Color = Color(0xFF80CBC4)
    override val light_inverseSurface: Color = Color(0xFF80CBC4)
    override val light_inverseOnSurface: Color = Color(0xFF003D33)
    override val light_inversePrimary: Color = Color(0xFF00695C)
    override val light_surfaceTint: Color = light_primary
    override val light_outlineVariant: Color = Color(0xFF80CBC4)
    override val light_scrim: Color = Color(0xFF000000)

    override val light_surfaceBright = Color(0xFFFDFDFD)
    override val light_surfaceDim = Color(0xFFEAEAE9)
    override val light_surfaceContainer = Color(0xFFFAFAFC)
    override val light_surfaceContainerHighest = Color(0xFFFFFFFF)
    override val light_surfaceContainerHigh = Color(0xFFF5F5F7)
    override val light_surfaceContainerLow = Color(0xFFE6E6E8)
    override val light_surfaceContainerLowest = Color(0xFFDADADB)

    override val dark_primary: Color = Color(0xFF80CBC4)
    override val dark_onPrimary: Color = Color(0xFF003D33)
    override val dark_primaryContainer: Color = Color(0xFF005B4F)
    override val dark_onPrimaryContainer: Color = Color(0xFF80CBC4)
    override val dark_secondary: Color = Color(0xFF81C784)
    override val dark_onSecondary: Color = Color(0xFF003300)
    override val dark_secondaryContainer: Color = Color(0xFFA5D6A7)
    override val dark_onSecondaryContainer: Color = Color(0xFF1B5E20)
    override val dark_tertiary: Color = Color(0xFF80CBC4)
    override val dark_onTertiary: Color = Color(0xFF006064)
    override val dark_tertiaryContainer: Color = Color(0xFFB2EBF2)
    override val dark_onTertiaryContainer: Color = Color(0xFF00796B)
    override val dark_error: Color = Color(0xFFCF6679)
    override val dark_onError: Color = Color(0xFF000000)
    override val dark_errorContainer: Color = Color(0xFF5D001E)
    override val dark_onErrorContainer: Color = Color(0xFFCF6679)
    override val dark_background: Color = Color(0xFF003D33)
    override val dark_onBackground: Color = Color(0xFF80CBC4)
    override val dark_surface: Color = Color(0xff044b3f)
    override val dark_onSurface: Color = Color(0xFF80CBC4)
    override val dark_surfaceVariant: Color = Color(0xFF005B4F)
    override val dark_onSurfaceVariant: Color = Color(0xFF80CBC4)
    override val dark_outline: Color = Color(0xFF80CBC4)
    override val dark_inverseSurface: Color = Color(0xFF80CBC4)
    override val dark_inverseOnSurface: Color = Color(0xFF003D33)
    override val dark_inversePrimary: Color = Color(0xFF00695C)
    override val dark_surfaceTint: Color = dark_primary
    override val dark_outlineVariant: Color = Color(0xFF80CBC4)
    override val dark_scrim: Color = Color(0xFF000000)

    override val dark_surfaceBright = Color(0xFFFAFAFC)
    override val dark_surfaceDim = Color(0xFFFAFAFC)
    override val dark_surfaceContainer = Color(0xFFFAFAFC)
    override val dark_surfaceContainerHighest = Color(0xFFFFFFFF)
    override val dark_surfaceContainerHigh = Color(0xFFF5F5F7)
    override val dark_surfaceContainerLow = Color(0xFFE6E6E8)
    override val dark_surfaceContainerLowest = Color(0xFFDADADB)

    override val seed: Color = light_primary
}