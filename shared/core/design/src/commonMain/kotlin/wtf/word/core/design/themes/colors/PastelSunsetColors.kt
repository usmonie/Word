package wtf.word.core.design.themes.colors;

import androidx.compose.ui.graphics.Color
import wtf.word.core.design.themes.Colors

data object PastelSunsetColors : Colors() {

    override val light_primary = Color(0xFF974066)
    override val light_onPrimary = Color(0xFFffffff)
    override val light_primaryContainer = Color(0xFFffd9e4)
    override val light_onPrimaryContainer = Color(0xFF880E4F)
    override val light_secondary = Color(0xFF800000)
    override val light_onSecondary = Color(0xFFFFFFFF)
    override val light_secondaryContainer = Color(0xFF90CAF9)
    override val light_onSecondaryContainer = Color(0xFF1A237E)
    override val light_tertiary = Color(0xFFFFAB91)
    override val light_onTertiary = Color(0xFFBF360C)
    override val light_tertiaryContainer = Color(0xFFFFAB91)
    override val light_onTertiaryContainer = Color(0xFFBF360C)
    override val light_error = Color(0xFFB00020)
    override val light_onError = Color(0xFFFFFFFF)
    override val light_errorContainer = Color(0xFFFCD8DC)
    override val light_onErrorContainer = Color(0xFF5D001E)
    override val light_background = Color(0xFFFFF3E0)
    override val light_onBackground = Color(0xFFBF360C)
    override val light_surface = Color(0xFFfffbff)
    override val light_onSurface = Color(0xFFBF360C)
    override val light_surfaceVariant = Color(0xFFF8BBD0)
    override val light_onSurfaceVariant = Color(0xFF880E4F)
    override val light_outline = Color(0xFF880E4F)
    override val light_inverseSurface = Color(0xFF90CAF9)
    override val light_inverseOnSurface = Color(0xFF1A237E)
    override val light_inversePrimary = Color(0xFFF8BBD0)
    override val light_surfaceTint = Color(0xFFF8BBD0)
    override val light_outlineVariant = Color(0xFF880E4F)
    override val light_scrim = Color(0xFF1A237E)

    override val light_surfaceBright = Color(0xFFFDFDFD)
    override val light_surfaceDim = Color(0xFFEAEAE9)
    override val light_surfaceContainer = Color(0xFFf2edf2)
    override val light_surfaceContainerHighest = Color(0xFFeedff3)
    override val light_surfaceContainerHigh = Color(0xFFf1eff3)
    override val light_surfaceContainerLow = Color(0xFFE6E6E8)
    override val light_surfaceContainerLowest = Color(0xFFDADADB)

    override val dark_primary = Color(0xFFFFB4A8)
    override val dark_onPrimary = Color(0xFF690000)
    override val dark_primaryContainer = Color(0xFF8F0F07)
    override val dark_onPrimaryContainer = Color(0xFFFFDAD4)
    override val dark_secondary = Color(0xFFE7BDB6)
    override val dark_onSecondary = Color(0xFF442925)
    override val dark_secondaryContainer = Color(0xFF5D3F3B)
    override val dark_onSecondaryContainer = Color(0xFFFFDAD4)
    override val dark_tertiary = Color(0xFFDEC48C)
    override val dark_onTertiary = Color(0xFF3E2E04)
    override val dark_tertiaryContainer = Color(0xFF564419)
    override val dark_onTertiaryContainer = Color(0xFFFBDFA6)
    override val dark_error = Color(0xFFFFB4AB)
    override val dark_errorContainer = Color(0xFF93000A)
    override val dark_onError = Color(0xFF690005)
    override val dark_onErrorContainer = Color(0xFFFFDAD6)
    override val dark_background = Color(0xFF201A19)
    override val dark_onBackground = Color(0xFFEDE0DD)
    override val dark_surface = Color(0xff3f3433)
    override val dark_onSurface = Color(0xFFEDE0DD)
    override val dark_surfaceVariant = Color(0xFF534341)
    override val dark_onSurfaceVariant = Color(0xFFD8C2BE)
    override val dark_outline = Color(0xFFA08C89)
    override val dark_inverseOnSurface = Color(0xFF201A19)
    override val dark_inverseSurface = Color(0xFFEDE0DD)
    override val dark_inversePrimary = Color(0xFFB22B1D)
    override val dark_surfaceTint = Color(0xFFFFB4A8)
    override val dark_outlineVariant = Color(0xFF534341)
    override val dark_scrim = Color(0xFF000000)

    override val dark_surfaceBright = Color(0xff3f3433)
    override val dark_surfaceDim = Color(0xff3f3433)
    override val dark_surfaceContainer = Color(0xFF594d4c)
    override val dark_surfaceContainerHighest = Color(0xFF877674)
    override val dark_surfaceContainerHigh = Color(0xFF70615f)
    override val dark_surfaceContainerLow = Color(0xFFE6E6E8)
    override val dark_surfaceContainerLowest = Color(0xFFDADADB)


    override val seed = Color(0xFF800000)
}